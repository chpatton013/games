package(default_visibility=["//visibility:private"])

copts = " ".join([
    "-Wno-error",
])

cmakeopts = " ".join([
    "-G 'Unix Makefiles'",
    "-DBUILD_SHARED_LIBS=OFF",
    "-DASSIMP_DOUBLE_PRECISION=OFF",
    "-DASSIMP_OPT_BUILD_PACKAGES=OFF",
    "-DASSIMP_ANDROID_JNIIOSYSTEM=OFF",
    "-DASSIMP_NO_EXPORT=OFF",
    "-DASSIMP_BUILD_ZLIB=OFF",
    "-DASSIMP_BUILD_ASSIMP_TOOLS=OFF",
    "-DASSIMP_BUILD_SAMPLES=OFF",
    "-DASSIMP_BUILD_TESTS=OFF",
])

genrule(
    name="libassimp",
    srcs=glob(
        include=["**/*"],
        exclude=["samples/**/*", "test/**/*"],
    ),
    outs=["libassimp.a"],
    cmd="; ".join([
        "mkdir assimp_build",
        "cd assimp_build",
        "CMAKE_CXX_FLAGS='%s' cmake %s ../external/assimp" %
            (copts, cmakeopts),
        "make",
        "cd ..",
        "mv assimp_build/code/libassimp.a $(OUTS)",
    ]),
)

cc_library(
    name="assimp",
    srcs=[":libassimp"],
    hdrs=glob(["include/assimp/**/*.h"]),
    textual_hdrs=glob(["include/assimp/**/*.inl"]),
    includes=["include"],
    linkstatic=1,
    visibility=["//visibility:public"],
)
